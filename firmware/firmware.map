Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
LOAD main.o
LOAD signal.o
LOAD signal_interrupt.o
LOAD leds.o
LOAD time_of_flight.o
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x1dc
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x10 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000042        0x4 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000046        0x2 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000046                __vector_12
                0x0000000000000046                __bad_interrupt
                0x0000000000000046                __vector_6
                0x0000000000000046                __vector_3
                0x0000000000000046                __vector_11
                0x0000000000000046                __vector_13
                0x0000000000000046                __vector_17
                0x0000000000000046                __vector_7
                0x0000000000000046                __vector_5
                0x0000000000000046                __vector_4
                0x0000000000000046                __vector_2
                0x0000000000000046                __vector_15
                0x0000000000000046                __vector_8
                0x0000000000000046                __vector_14
                0x0000000000000046                __vector_10
                0x0000000000000046                __vector_16
                0x0000000000000046                __vector_18
 .text          0x0000000000000048        0x8 main.o
                0x0000000000000048                init
 .text          0x0000000000000050       0x1c signal.o
                0x0000000000000050                signal_init
 .text          0x000000000000006c       0x88 signal_interrupt.o
                0x000000000000006c                signal_interrupt_init
                0x0000000000000078                signal_interrupt_activate
                0x0000000000000086                signal_interrupt_deactivate
                0x000000000000008e                __vector_1
                0x00000000000000c6                __vector_9
 .text          0x00000000000000f4       0x54 leds.o
                0x00000000000000f4                _leds_blink
                0x0000000000000134                leds_init
 .text          0x0000000000000148       0x8a time_of_flight.o
                0x0000000000000148                tof_init
                0x000000000000014e                tof_measure
 .text          0x00000000000001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x00000000000001d2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000001d2                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000001d2        0x6 main.o
                0x00000000000001d2                main
 .text.libgcc.mul
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000001d8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000001d8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x00000000000001d8                exit
                0x00000000000001d8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000001d8        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000001dc                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000001dc
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 signal.o
 .data          0x0000000000800060        0x0 signal_interrupt.o
 .data          0x0000000000800060        0x0 leds.o
 .data          0x0000000000800060        0x0 time_of_flight.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0x6
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800060        0x0 main.o
 .bss           0x0000000000800060        0x0 signal.o
 .bss           0x0000000000800060        0x6 signal_interrupt.o
                0x0000000000800060                of
                0x0000000000800062                overflow
                0x0000000000800064                counterreg
                0x0000000000800065                flag
 .bss           0x0000000000800066        0x0 leds.o
 .bss           0x0000000000800066        0x0 time_of_flight.o
 .bss           0x0000000000800066        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800066        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800066        0x0 main.o
                0x0000000000800066                PROVIDE (__bss_end, .)
                0x00000000000001dc                __data_load_start = LOADADDR (.data)
                0x00000000000001dc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800066        0x0
                0x0000000000800066                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800066                PROVIDE (__noinit_end, .)
                0x0000000000800066                _end = .
                0x0000000000800066                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x27
 *(.comment)
 .comment       0x0000000000000000       0x27 main.o
                                         0x28 (size before relaxing)
 .comment       0x0000000000000027       0x28 signal.o
 .comment       0x0000000000000027       0x28 signal_interrupt.o
 .comment       0x0000000000000027       0x28 leds.o
 .comment       0x0000000000000027       0x28 time_of_flight.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xa8
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o
 .debug_aranges
                0x0000000000000028       0x20 signal.o
 .debug_aranges
                0x0000000000000048       0x20 signal_interrupt.o
 .debug_aranges
                0x0000000000000068       0x20 leds.o
 .debug_aranges
                0x0000000000000088       0x20 time_of_flight.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xbfd
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .debug_info    0x000000000000048c      0x159 main.o
 .debug_info    0x00000000000005e5       0x8a signal.o
 .debug_info    0x000000000000066f      0x133 signal_interrupt.o
 .debug_info    0x00000000000007a2      0x1cb leds.o
 .debug_info    0x000000000000096d      0x290 time_of_flight.o

.debug_abbrev   0x0000000000000000      0x868
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .debug_abbrev  0x000000000000044e       0xc2 main.o
 .debug_abbrev  0x0000000000000510       0x4f signal.o
 .debug_abbrev  0x000000000000055f       0x90 signal_interrupt.o
 .debug_abbrev  0x00000000000005ef      0x128 leds.o
 .debug_abbrev  0x0000000000000717      0x151 time_of_flight.o

.debug_line     0x0000000000000000      0x314
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .debug_line    0x000000000000001d       0xad main.o
 .debug_line    0x00000000000000ca       0x58 signal.o
 .debug_line    0x0000000000000122       0x6e signal_interrupt.o
 .debug_line    0x0000000000000190       0xa7 leds.o
 .debug_line    0x0000000000000237       0xdd time_of_flight.o

.debug_frame    0x0000000000000000      0x15c
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x34 main.o
 .debug_frame   0x0000000000000034       0x24 signal.o
 .debug_frame   0x0000000000000058       0x94 signal_interrupt.o
 .debug_frame   0x00000000000000ec       0x34 leds.o
 .debug_frame   0x0000000000000120       0x3c time_of_flight.o

.debug_str      0x0000000000000000      0x3d5
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17a /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .debug_str     0x000000000000017a      0x14b main.o
                                        0x184 (size before relaxing)
 .debug_str     0x00000000000002c5        0x9 signal.o
                                        0x13a (size before relaxing)
 .debug_str     0x00000000000002ce       0x5f signal_interrupt.o
                                        0x1b3 (size before relaxing)
 .debug_str     0x000000000000032d       0x5e leds.o
                                        0x184 (size before relaxing)
 .debug_str     0x000000000000038b       0x4a time_of_flight.o
                                        0x212 (size before relaxing)

.debug_loc      0x0000000000000000      0x1bf
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x92 signal_interrupt.o
 .debug_loc     0x0000000000000092       0xa6 leds.o
 .debug_loc     0x0000000000000138       0x87 time_of_flight.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(firmware.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                                                  time_of_flight.o
                                                  signal_interrupt.o
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__stack                                           /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_1                                        signal_interrupt.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_11                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_2                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_6                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_9                                        signal_interrupt.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
_leds_blink                                       leds.o
counterreg                                        signal_interrupt.o
                                                  time_of_flight.o
                                                  main.o
exit                                              /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
flag                                              signal_interrupt.o
                                                  time_of_flight.o
                                                  main.o
init                                              main.o
leds_init                                         leds.o
                                                  main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
of                                                signal_interrupt.o
                                                  time_of_flight.o
                                                  main.o
overflow                                          signal_interrupt.o
                                                  time_of_flight.o
                                                  main.o
signal_init                                       signal.o
                                                  main.o
signal_interrupt_activate                         signal_interrupt.o
                                                  time_of_flight.o
signal_interrupt_deactivate                       signal_interrupt.o
                                                  time_of_flight.o
signal_interrupt_init                             signal_interrupt.o
                                                  main.o
tof_init                                          time_of_flight.o
                                                  main.o
tof_measure                                       time_of_flight.o
